ext {
    // Android
    buildToolsVersion = "25.0.0"
    minSdkVersion = 21
    targetSdkVersion = 23
    compileSdkVersion = 25
    versionCode = 1
    versionName = "1.0"
    applicationId = "mb.pokequiz.app"

    // Library Versions
    daggerVersion = '2.9'

    rxJavaVersion = '2.0.2'

    rxAndroidVersion = '2.0.1'

    androidSupportVersion = '25.1.0'

    retrofitVersion = '2.2.0'

    conductorVersion = '2.0.4'

    fieldNamesHelperVersion = '1.1.0'

    kotlinVersion = '1.1.1'

    databindingVersion = '2.4.0-alpha4'

    javaxVersion = '10.0-b28'

    okHttpVersion = '3.4.1'

    glideVersion = '3.7.0'

    appDependencies = [
            dagger: "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler: "com.google.dagger:dagger-compiler:${daggerVersion}",
            javax: "org.glassfish:javax.annotation:${javaxVersion}",

            design: "com.android.support:design:${androidSupportVersion}",
            palette: "com.android.support:palette-v7:${androidSupportVersion}",

            rxAndroid: "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxJava: "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",

            retrofit: "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitGson: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitRx: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",

            fieldNamesHelper: "dk.ilios:realmfieldnameshelper:${fieldNamesHelperVersion}",

            databinding: "com.android.databinding:compiler:${databindingVersion}",

            okHttp: "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",

            glide: "com.github.bumptech.glide:glide:${glideVersion}",
            glideOkHttp3: "com.github.bumptech.glide:okhttp3-integration:1.4.0@aar",
    ]

    jUnitVersion = '4.12'
    assertJVersion = '1.7.1'
    mockitoVersion = '1.9.5'

    testDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            mockito: "org.mockito:mockito-core:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
    ]

    kotlin = "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    kotlinReflect = "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
}